@model UnipiForum.Areas.Admin.ViewModels.GTG
@{
    var lastNotification = Model.ChatMessages.LastOrDefault();
    var lastNotificationId = -1;
    if (lastNotification != null)
    {
        lastNotificationId = lastNotification.ChatId;
    }


}

<table class="table table-striped pull-right panel panel-default" style="width: 30%; ">
    <thead class="panel panel-heading">
    <tr>
        <th>User Name</th>
        <th>University ID</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var user in Model.Group.users)
    {
        <tr>
            <td>@user.username</td>
            <td>@user.user_university_id</td>
        </tr>
    }
    </tbody>
</table>
<div class="panel panel-default" style="width: 65%; height: 190px;">
    <div class="panel-heading" style="font-weight: bold;" >Ulh</div>
    <div class="panel-body"> @Model.Ulh.text</div>
</div>
<div class="panel-body panel-heading panel panel-default">
    @{ var type_id = Model.Group.diff_id + 1;}
    <h4><a href="@Url.Action("Index", "UserTests",new {area="",type_id})">Do the Test of this section!</a></h4>
</div>

<div id="chatContainer" class="chatContainer" style="width: 100%;">


    <div class="chat-window-title">
        <div class="text">Chat</div>
    </div>
    <div class="chat-window-content">
        <div class="chat-window-inner-content message-board pm-window">
            <div class="messages-wrapper" style="height: 450px ;">
                @*current_user_message*@
                @foreach (var chat in Model.ChatMessages)
                {
                    string cssClass = "";
                    if (chat.IsCurrentUserMessage)
                    {
                        cssClass = "current_user_message";
                    }
                    else
                    {
                        cssClass = "user_message";
                    }
                    <div class="chat-message" data-chat-id="@chat.ChatId">
                        <div class="message_float_node @cssClass">
                            <div class="chat-gravatar-wrapper"><img class="profile-picture" src="@chat.SenderImagePath"></div>
                            <div class="chat-text-wrapper">
                                <p class="">@chat.Content</p>
                            </div>
                        </div>
                    </div>

                    @*<div class="chat-message" data-chat-id="{chat_id}"><div class="chat-gravatar-wrapper"><img class="profile-picture" src="{icon_source}"></div><div class="chat-text-wrapper"><p class="">{message_content}</p></div></div>*@
                }

            </div>
            <div class="chat-window-text-box-wrapper">
                <input rows="1" class="chat-window-text-box" style="overflow: hidden; word-wrap: break-word; resize: none; height: 50px;" id="chatInput" />
            </div>
        </div>
    </div>



</div>

<script>
    var ChatOptions = {
        LastNotificationId : @lastNotificationId
    };

    var beginChatNotification = function () {

        $.ajax({
            type: "POST",
            url: "GetChatMessages?lastNotificationId=" + ChatOptions.LastNotificationId+"&groupId="+@Model.Group.group_id,
            contentType: "application/json; charset=utf-8",
            success: function (res) {
                for (var i = 0; i < res.length; i++) {
                    if (res[i].ChatId > ChatOptions.LastNotificationId) {
                        ChatOptions.LastNotificationId = res[i].ChatId;
                    }
                    appendMessage(res[i].ChatId,
                        res[i].SenderId,
                        res[i].Content,
                        res[i].IsCurrentUserMessage,
                        res[i].SenderImagePath,
                        res[i].Timestamp);
                }
                beginChatNotification();
            },
            fail: function () { }
        });

    }

    document.addEventListener("DOMContentLoaded", function () {
        beginChatNotification();
        $("#chatInput").keypress(function (e) {
            if (e.which == 13) {
                var input = $("#chatInput").val();
                $("#chatInput").val(null);
                sendMessage(input);
            }
        });
    });

    function validateMessage(messageContent) {
        if (messageContent == null || messageContent === "" || messageContent.trim() === "") {  //|| messageContent.length>3){
            window.alert("You can not input an empty text.");
            return false;
        }
        return true;
    };

    var sendMessage = function (messageContent) {
        if (!validateMessage(messageContent)) {
            return false;
        }
        var _data = {
            GroupId: @Model.Group.group_id,
            Content: messageContent
        };
        $.ajax({
            type: "POST",
            url: "SendMessage",
            data: JSON.stringify(_data),
            contentType: "application/json; charset=utf-8",
            success: function(res) {
            },
            fail: function() {}
        });
    };

    var appendMessage = function (messageId, userId, messageContent, isCurrentUserMessage, imagePath, chatTimestamp) {
        var template;
        if (isCurrentUserMessage) {
            template = '<div class="chat-message" data-chat-id="' + messageId + '"><div class="message_float_node current_user_message"><div class="chat-gravatar-wrapper"><img class="profile-picture" src="' + imagePath + '"></div><div class="chat-text-wrapper"><p class="">' + messageContent + '</p></div></div></div>';
        } else {
            template = '<div class="chat-message" data-chat-id="' + messageId + '"><div class="message_float_node user_message"><div class="chat-gravatar-wrapper"><img class="profile-picture" src="' + imagePath + '"></div><div class="chat-text-wrapper"><p class="">' + messageContent + '</p></div></div></div>';
        }
        $('.messages-wrapper').append(template);
    }
</script>


<style>
    .current_user_message {
        float: right;
        background: #118FFF;
        color: #B6E2F2;
        border-radius: 15px;
        padding: 8px;
        height: 80%;
    }

    .user_message {
        background: #E6ECEC;
        color: #434949;
        border-radius: 15px;
        padding: 8px;
        height: 80%;
    }

    .chat-text-wrapper p {
        font-size: 15px;
    }

    .chat-message .chat-text-wrapper {
        line-height: 1.6em;
        margin-left: 38px;
    }

    .message-board .messages-wrapper .profile-picture {
        height: 20px;
        width: 20px;
    }


    .chat-message .chat-gravatar-wrapper {
        float: left;
    }

    .chat-window-text-box {
        width: 100%;
    }

    .chat-window-text-box-wrapper {
        width: 100%;
    }

    .chat-window-content {
        height: 450px
    }

    .chatContainer {
        border: 1px solid black;
        width: 999px;
        background-color: #FFFFFF;
        border: 1px solid rgba(0, 0, 0, 0.3);
        border-width: 1px;
        font-family: Arial, Helvetica;
        font-size: 12px;
        line-height: 14.4px;
    }

    .chat-window-title {
        background: none repeat scroll 0 0 #EEEEEE;
        color: #7E7E7E;
        cursor: pointer;
        overflow: hidden;
        padding: 6px;
    }

    .message-board .messages-wrapper {
        -moz-box-sizing: border-box;
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        overflow-x: hidden;
        overflow-y: auto;
        padding: 2px 0;
    }

    .chat-message {
        margin: 0 5px;
        overflow: hidden;
        padding: 2px 0;
    }

    .message-board.pm-window {
        margin-bottom: 3px;
    }

    .message-board {
        -moz-box-sizing: border-box;
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        position: relative;
        overflow: hidden;
    }

    .chat-window-inner-content {
        overflow-y: auto;
    }
</style>
